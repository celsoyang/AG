verbosity = 0 //Impedir menssagens
flush = true //Escrever informações na tela
store = true //Criar arquivo de saída
breedthreads = 1 //Multithreads
evalthreads = 1 //Avalia a função de fitness em cada execução
seed.0 = 4357 
state = ec.simple.SimpleEvolutionState //Objeto de Evolução
pop = ec.Population //Chama a classe para criar a população inicial
init = ec.simple.SimpleInitilizer //Inicia a população inicial
finish = ec.simple.SimpleFinisher //Classe para terminar o AG
breed = ec.simple.SimpleBreeder 
eval = ec.simple.SimpleEvaluator //Classe de avaliação
stat = ec.simple.SimpleStatistics //Classe para obter registro de execução
exch = ec.simple.SimpleExchanger //Classe para troca de indivíduos
generation = 200 //Número de gerações
quit-on-run-complete = true //Indica que deve parar
gc = false //Parâmetro genérico
aggressive = true //Tipo de algoritmo
gc-modulo = 1 //Parâmetro genérico
checkpoint = false //Parâmetro genérico para debug
prefix = ec //Parâmetro genérico
checkpoint-modulo = 1 //Parâmetro genérico
stat.file = $out.stat //Arquivo de saída da execução
pop.subpops = 1 //Parâmetro genérico
pop.subpop.0 = ec.Subpopulation //Parâmetro genérico
pop-subpop.0.size = 100 //
pop.subpop.0.duplicates-retries = 0 //
pop.subpop.0.fitness = ec.simple.SimpleFitness //Função de Fitness
pop.subpop.0.species = ec.vector.VectorSpecies //Tipo de ondivíduo num vetor
pop.subpop.0.species.genome-size = 100 //Tamanho do genôma
pop.subpop.0.species.crossover-type = one //Tipo de mutação
pop.subpop.0.species.crossover-prob = 1.0 //Probabilidade de mutação
pop.subpop.0.species.mutation-prob = 0.01 //Probabilidade de Mutação por indivíduo
vector.species.genome-size = 100 //Quantidade de representação de genoma
pop.subpop.0.species.pipe = ec.vector.breed.VectorMutationPipeline
pop.subpop.0.species.pipe.source.0 = ec.vector.breed.VectorCrossoverPipeline
pop.subpop.0.species.pipe.source.0
